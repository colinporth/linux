ssh -l pi pi

sudo nano /boot/cmdline.txt
logo.nologo
init=/usr/lib/raspi-config/init_resize.sh

sudo nano /boot/config.txt
lcd_rotate=2

{{{  raspi-config
sudo raspi-config
- Change user password
  - set password
- Network options
  - set hostname pi
- Interfacing options
  - enable camera
  - enable ssh
- Advanced options
  - memory split 128
  - audio force 3.5
}}}

sudo apt -y install libgtk-3-dev

mkdir /home/pi/tv
chmod 0777 /home/pi/tv

{{{  misc commands
df
rm -r "directory"
mv
cp

glxinfo

sudo reboot
sudo powerdown

tail -f 10 /var/log/syslog

ip addr show

smartctl -a

uname

upower -d
acpi -V
sudo iotop
sudo nethogs

raspistill -f
raspivid -f -t 200000

sudo rpi-eeprom-update
vcgencmd bootloader_version
vcgencmd bootloader_config

lcd brightness
- sudo su
- echo 160 > /sys/class/backlight/acpi_video0/brightness

sudo apt install xbacklight
xbacklight -set 30

sudo cp dvb-usb-digitv-02.fw /lib/firmware
}}}
{{{  git commands
git pull
git push

git reset --hard

git config --global user.name colinwrey
git config --global user.email colinwrey@hotmail.com

git status -s
git checkout *.h
}}}
{{{  vcpkg windows
git clone https://github.com/microsoft/vcpkg
.\vcpkg\bootstrap-vcpkg.bat
.\vcpkg\vcpkg integrate install
.\vcpkg\vcpkg install tesseract:x64-windows-static
.\vcpkg\vcpkg install tesseract:x64-windows
}}}
{{{  subtitles ocr
cd ~
sudo apt -y install libtool libleptonica-dev
git clone https://github.com/tesseract-ocr/tesseract
https://medium.com/zattoo_tech/dvb-bitmap-subtitles-processing-at-zattoo-5f0e82048236
}}}

{{{  fstab
sudo nano /etc/fstab

proc            /proc           proc    defaults          0       0
PARTUUID=8f1329f4-01  /boot           vfat    defaults          0       2
PARTUUID=8f1329f4-02  /               ext4    defaults,noatime  0       1
/dev/sda1       /home/pi/ts     auto    defaults,noatime,nofail 0       0
/dev/mmcblk0p3  /home/pi/ts     f2fs    defaults,noatime,nofail 0       0

#sudo mount /dev/sda1 /home/pi/ts -o noatime
}}}
{{{  partition, format disk
sudo fdisk /dev/sda
- create partition sda1

sudo mkfs.ext4 /dev/sda1
sudo mkfs.f2fs /dev/sda1
sudo mkfs.ntfs /dev/sda1

sudo mount -o auto,noatime /dev/sda1 /home/pi/ts
sudo umount /dev/sda1

sudo fdisk /dev/mmcblk0
- create partition mmcblk0p3
sudo resize2fs /dev/mmcblk0p2

sudo apt -y install f2fs-tools
sudo mkfs.f2fs /dev/mmcblk0p3
sudo mount -o auto,noatime /dev/mmcblk0p3 /home/pi/ts
sudo umount /dev/mmcblk0p3

sudo apt -y install autofs
}}}
{{{  config cifs
sudo mount -t cifs -o user=colin,vers=2.0 //mini1/projects /home/pi/projects
}}}
{{{  config samba
cd /etc/samba
sudo nano smb.conf
{{{  smb.conf
[global]
   workgroup = WORKGROUP
   dns proxy = no
   log file = /var/log/samba/log.%m
   max log size = 1000
   syslog = 0
   panic action = /usr/share/samba/panic-action %d
   server role = standalone server
   passdb backend = tdbsam
   obey pam restrictions = yes
   unix password sync = yes
   passwd program = /usr/bin/passwd %u
   passwd chat = *Enter\snew\s*\spassword:* %n\n *Retype\snew\s*\spassword:* %n\n *password\supdated\ssu                                                                                                           ccessfully* .
   pam password change = yes
   map to guest = bad user
[homes]
   comment = Home Directories
   browseable = no
   read only = yes
   create mask = 0700
   directory mask = 0700
   valid users = %S
[pi]
  comment = Pifolder
  path = /home/pi
  browseable = yes
  read only = no
  valid users = pi colin
  create mask = 0777
  directory mask = 0777
  veto oplock files = /*.ts/

}}}
testparm
sudo smbpasswd -a pi
}}}
{{{  build FFmpeg
../configure --extra-ldflags="-latomic" --arch=armel --target-os=linux --enable-gpl --enable-omx --enable-omx-rpi --enable-nonfree
}}}

{{{  build SDL
cd /mnt/c/projects

git clone https://github.com/SDL-mirror/SDL
git clone https://github.com/SDL-mirror/SDL_ttf
git clone https://github.com/SDL-mirror/SDL_image

cd SDL
mkdir build
cd build
../configure
make

cd SDL_ttf
mkdir build
cd build
../configure
make

cd SDL_image
mkdir build
cd build
../configure
make


sudo make install
}}}
{{{  build glfw
sudo apt -y install libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev
cd ~
git clone https://github.com/glfw/glfw
cd glfw
mkdir build
cd build
cmake ..
make
sudo make install
}}}

{{{  install visual studio code
from
  https://pimylifeup.com/raspberry-pi-visual-studio-code/

wget https://packagecloud.io/headmelted/codebuilds/gpgkey -O - | sudo apt-key add -
curl -L https://raw.githubusercontent.com/headmelted/codebuilds/master/docs/installers/apt.sh | sudo bash
}}}
{{{  use WSL2 xfce4
sudo apt-get install xfce4
}}}
{{{  build libcamera
add to /boot/config.txt
dtoverlay=ov5647
dtoverlay=imx477
dtoverlay=imx219
core_freq_min=250

sudo apt -y install libboost-dev libgnutls28-dev openssl libtiff5-dev
sudo apt -y install meson qtbase5-dev libqt5core5a libqt5gui5 libqt5widgets5
sudo pip3 install pyyaml

git clone git://linuxtv.org/libcamera.git
cd libcamera

meson build
cd build
meson configure -Dpipelines=raspberrypi -Dtest=false
cd ..

sudo ninja -C build install

build/src/qcam/qcam
}}}
{{{  build openVX
git clone --recursive https://github.com/KhronosGroup/OpenVX-sample-impl.git

cd OpenVX-sample-impl/
python Build.py --os=Linux --venum --conf=Debug --conf_vision --enh_vision --conf_nn

export OPENVX_DIR=$(pwd)/install/Linux/x32/Debug
export VX_TEST_DATA_PATH=$(pwd)/cts/test_data/
mkdir build-cts
cd build-cts
cmake -DOPENVX_INCLUDES=$OPENVX_DIR/include -DOPENVX_LIBRARIES=$OPENVX_DIR/bin/libopenvx.so\;$OPENVX_DIR/bin/libvxu.so\;pthread\;dl\;m\;rt -DOPENVX_CONFORMANCE_VISION=ON -DOPENVX_USE_ENHANCED_VISION=ON -DOPENVX_CONFORMANCE_NEURAL_NETWORKS=ON ../cts/
cmake --build .
LD_LIBRARY_PATH=./lib ./bin/vx_test_conformance

cd ~/ && mkdir OpenVXSample-pop
cd OpenVXSample-pop/
git clone https://github.com/kiritigowda/openvx-samples.git

export OPENVX_DIR=$(pwd)/install/Linux/x32/Debug
mkdir pop-build && cd pop-build
cmake -DOPENVX_INCLUDES=$OPENVX_DIR/include -DOPENVX_LIBRARIES=$OPENVX_DIR/bin/libopenvx.so ../openvx-samples/bubble-pop/

./vxPop --bubble
./vxPop --donut
}}}

{{{  build pulseview
git clone https://github.com/sigrokproject/libsigrok
sudo apt -y install doxygen
./autogen.sh
./configure
make
sudo make install

git clone https://github.com/sigrokproject/libsigrokdecode
./autogen.sh
./configure
make
sudo make install

git clone git://sigrok.org/pulseview.git
sudo apt install libsigrokcxx-dev
sudo apt -y install libglib2.0
sudo apt -y install libglib2.0-dev
sudo apt -y install libgtkmm-3.0-dev
sudo apt -y install qt5-default
sudo apt -y install qtdeclarative5-dev
sudo apt -y install qttools5-dev-tools
sudo apt -y install qttools5-dev
sudo apt -y install libqt5svg5-dev
sudo apt -y install libboost-all-dev
cd pulseview
cmake .
make
}}}

/etc/rc.local
dtc -I dtb -O dts *.dtb

git clone https://github.com/mypaint/libmypaint
sudo apt -y install intltool
sudo apt -y install libjson-c-dev
cd libmypaint
./autogen.sh
./configure
make
sudo make install

git clone https://github.com/mypaint/mypaint-brushes
cd mypaint-brushes
./autogen.sh
./configure
make
sudo make install

git clone https://github.com/mypaint/mypaint
cd mypaint

git clone https://github.com/json-c/json-c.git
mkdir build
cd build
cmake ..

sudo apt -y install xserver-xorg
sudo apt -y install raspberrypi-ui-mods
sudo apt -y install lxde-core lxappearance
